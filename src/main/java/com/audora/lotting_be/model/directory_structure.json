{
    "__files__": {
        "codes.py": null,
        "directory_structure.json": null
    },
    "customer": {
        "__files__": {
            "Attachments.java": "// Attachments.java\npackage com.audora.lotting_be.model.customer;\n\nimport jakarta.persistence.Embeddable;\nimport lombok.Data;\n\nimport java.time.LocalDate;\n\n@Embeddable\n@Data\npublic class Attachments {\n    private Boolean isuploaded; // 파일 제출했는지 여부\n    private String fileinfo; // 파일 주소, 이름, 확장자\n\n    private Boolean exemption7; // 7차 면제\n    private Boolean investmentfile; //출자금\n    private Boolean contract; //지산 A동 계약서\n    private Boolean agreement; //총회동의서\n\n    private Boolean sealcertificateprovided; // 인감증명서 제출 여부\n    private Boolean selfsignatureconfirmationprovided; // 본인서명확인서 제출 여부\n    private Boolean idcopyprovided; // 신분증 사본 제출 여부\n    private Boolean commitmentletterprovided; // 확약서 제출 여부\n    private Boolean forfounding; //창준위용 제출여부\n    private Boolean freeoption; //무상옵션 제출여부\n    private Boolean preferenceattachment; //선호도조사 제출여부\n    private Boolean generalmeetingconsentformprovided; // 총회 동의서 제출 여부\n    private Boolean prizeattachment; // 사은품 제출 여부\n\n    private String prizename; //사은품명 *새로 추가한 항목\n    private LocalDate prizedate; //사은품지급일자 *새로 추가한 항목\n\n}\n",
            "Customer.java": "// src/main/java/com/audora/lotting_be/model/customer/Customer.java\npackage com.audora.lotting_be.model.customer;\n\nimport com.audora.lotting_be.model.customer.minor.*;\nimport com.fasterxml.jackson.annotation.JsonManagedReference;\nimport jakarta.persistence.*;\nimport lombok.Data;\nimport lombok.EqualsAndHashCode;\n\nimport java.time.LocalDate;\nimport java.util.List;\n\n@Entity\n@Data\n@EqualsAndHashCode(exclude = \"status\")\npublic class Customer {\n    @Id\n    private Integer id; // 관리번호\n\n    private String customertype; // 분류(회원)\n    private String type;         // 타입\n    private String groupname;    // 군\n    private String turn;         // 순번\n    private String temptype;     //임시동호\n    private String batch;        // 가입차순\n    private LocalDate registerdate; // 가입일자\n    private Long registerprice;     // 가입가\n    private String additional;      // 비고\n    private String registerpath;    // 가입경로\n    private String specialnote;     // 특이사항\n    private String prizewinning;    // 경품당첨\n    private String votemachine; //투표기기\n\n    @Embedded\n    private CustomerData customerData = new CustomerData(); // 가입자\n\n    @Embedded\n    private LegalAddress legalAddress = new LegalAddress();   // 법정주소\n\n    @Embedded\n    private Postreceive postreceive = new Postreceive();      // 우편물 수령주소\n\n    @Embedded\n    private Financial financial = new Financial();            // 금융기관\n\n    @Embedded\n    private Deposit deposits = new Deposit();                 // 예약금\n\n    @Embedded\n    private Attachments attachments = new Attachments();        // 부속서류\n\n    @Embedded\n    private Cancel cancel=new Cancel();                       //해약\n\n    // 기존 대출/자납 기록용 loan 필드\n    @Embedded\n    private Loan loan = new Loan();                           // 대출, 자납\n\n    @Embedded\n    private Responsible responsible = new Responsible();      // 담당\n\n    @Embedded\n    private Dahim dahim = new Dahim();                        // 다힘\n\n    @Embedded\n    private MGM mgm = new MGM();                              // MGM\n\n    @Embedded\n    private Firstemp firstemp = new Firstemp();               // 1차(직원)\n\n    @Embedded\n    private Secondemp secondemp = new Secondemp();            // 2차\n\n    @Embedded\n    private Meetingattend meetingattend = new Meetingattend();  // 총회참석여부\n\n    @Embedded\n    private Agenda agenda = new Agenda();        // 안건\n\n    @OneToMany(mappedBy = \"customer\", cascade = CascadeType.ALL)\n    @JsonManagedReference\n    private List<Phase> phases; // n차\n\n    @OneToOne(mappedBy = \"customer\", cascade = CascadeType.ALL)\n    @JsonManagedReference\n    private Status status; // 현 상태\n\n    // 여러 입금내역\n    @OneToMany(mappedBy = \"customer\", cascade = CascadeType.ALL)\n    @JsonManagedReference(value = \"customer-depositHistories\")\n    private List<DepositHistory> depositHistories;\n}\n",
            "DepositHistory.java": "package com.audora.lotting_be.model.customer;\n\nimport com.audora.lotting_be.model.customer.minor.Loan;\nimport com.fasterxml.jackson.annotation.JsonBackReference;\nimport jakarta.persistence.*;\nimport lombok.Data;\n\nimport java.time.LocalDate;\nimport java.time.LocalDateTime;\nimport java.util.List;\n\n@Entity\n@Data\npublic class DepositHistory {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n\n    // 거래일시\n    private LocalDateTime transactionDateTime;\n\n    // 적요\n    private String description;\n\n    // 기재내용 (예: 고객명 + 상태)\n    private String details;\n\n    // 계약자 (고객명 등)\n    private String contractor;\n\n    // 찾으신금액 (예: 다시 뽑은 금액)\n    private Long withdrawnAmount;\n\n    // 맡기신금액 (입금액)\n    private Long depositAmount;\n\n    // 거래후 잔액 (계산된 잔액 등, 우선 단순 기재)\n    private Long balanceAfter;\n\n    // 취급점 (은행/지점)\n    private String branch;\n\n    // 계좌 (알파벳 단축어 등)\n    private String account;\n\n    // 1~10차 입금여부 (기존 depositPhaseN 필드들)\n    // \"1\": 이번 입금에서 해당 차수에 '처음' 돈이 들어감\n    // \"0\": 이번 입금에서 해당 차수에 '추가' 돈이 들어감\n    // null 또는 \"\" : 이번 입금에서 해당 차수에 분배되지 않음\n    private String depositPhase1;\n    private String depositPhase2;\n    private String depositPhase3;\n    private String depositPhase4;\n    private String depositPhase5;\n    private String depositPhase6;\n    private String depositPhase7;\n    private String depositPhase8;\n    private String depositPhase9;\n    private String depositPhase10;\n\n    // 대출/자납 여부: \"o\" = 대출/자납 입금, 아니면 일반 입금\n    private String loanStatus;\n\n    // 대출 일자\n    private LocalDate loanDate;\n\n    // 비고 (메모)\n    private String remarks;\n\n    // ★ [임베디드] 대출/자납 상세 정보\n    @Embedded\n    @AttributeOverrides({\n            @AttributeOverride(name = \"loandate\", column = @Column(name = \"loan_details_loandate\")),\n            @AttributeOverride(name = \"loanbank\", column = @Column(name = \"loan_details_loanbank\")),\n            @AttributeOverride(name = \"loanammount\", column = @Column(name = \"loan_details_loanammount\")),\n            @AttributeOverride(name = \"selfdate\", column = @Column(name = \"loan_details_selfdate\")),\n            @AttributeOverride(name = \"selfammount\", column = @Column(name = \"loan_details_selfammount\")),\n            @AttributeOverride(name = \"loanselfsum\", column = @Column(name = \"loan_details_loanselfsum\")),\n            @AttributeOverride(name = \"loanselfcurrent\", column = @Column(name = \"loan_details_loanselfcurrent\"))\n    })\n    private Loan loanDetails;\n\n    // ★ [신규] 어느 phase에 얼마를 분배할지 지정 (대출/자납용)\n    @ElementCollection\n    @CollectionTable(name = \"deposit_history_target_phases\",\n            joinColumns = @JoinColumn(name = \"deposit_history_id\"))\n    @Column(name = \"target_phase\")\n    private List<Integer> targetPhases;\n\n    // ★ [신규] 첫 번째 대출이면 \"1\", 두 번째 이상이면 \"0\"\n    private String loanRecord;\n\n    // ★ [신규] 첫 번째 자납이면 \"1\", 두 번째 이상이면 \"0\"\n    private String selfRecord;\n\n    // DepositHistory는 하나의 고객에 종속됨\n    @ManyToOne\n    @JoinColumn(name = \"customer_id\")\n    @JsonBackReference(value = \"customer-depositHistories\")\n    private Customer customer;\n}\n",
            "Phase.java": "package com.audora.lotting_be.model.customer;\n\nimport com.fasterxml.jackson.annotation.JsonBackReference;\nimport jakarta.persistence.*;\nimport lombok.Data;\nimport java.time.LocalDate;\n\n@Entity\n@Data\npublic class Phase {\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n\n    private Integer phaseNumber;      // 차수\n    private LocalDate planneddate;      // 예정일자\n    private String planneddateString;   // 원래 예정일자 (문자열)\n    private LocalDate fullpaiddate;     // 완납일자\n    private Long charge;              // 부담금 (원금)\n    private Long discount;            // 할인액 (실제 납부액에서는 차감)\n    private Long exemption;           // 면제금액\n    private Long service;             // 업무대행비\n    private Long feesum;              // 총 부담금 = charge + service - exemption\n    private String move;//이동\n    private Long charged;           // 입금(Deposit)으로 지급된 금액 (할인액 반영)\n    private Long loanCharged;       // 대출/자납으로 지급된 금액 (할인액 무시; 인정금액)\n    private Long sum;               // 미납금 = (feesum - discount) - charged\n\n    @ManyToOne\n    @JoinColumn(name = \"customer_id\")\n    @JsonBackReference\n    private Customer customer;\n}\n",
            "Status.java": "// Status.java\npackage com.audora.lotting_be.model.customer;\n\nimport com.fasterxml.jackson.annotation.JsonBackReference;\nimport jakarta.persistence.*;\nimport lombok.Data;\nimport lombok.EqualsAndHashCode;\n\n@Entity\n@Data\n@EqualsAndHashCode(exclude = \"customer\") // customer 필드 제외\npublic class Status {\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n\n    private Long exemptionsum; // 총면제금액\n    private Long unpaidammout; // 미납금액\n    private String unpaidphase; // 미납차순 (1,2,3,...)\n    private Long prepaidammount; // 기납부금액\n    private Long ammountsum; // 1~n차 납입총액\n    private Long percent40; // 40%\n\n    // 새로 추가된 필드들\n    private Long exceedamount;      // 초과된 예약금(입금) 금액\n    private Long loanExceedAmount;  // 초과된 대출/자납 금액\n\n    @OneToOne\n    @JoinColumn(name = \"customer_id\")\n    @JsonBackReference\n    private Customer customer;\n}\n"
        },
        "minor": {
            "__files__": {
                "Agenda.java": "package com.audora.lotting_be.model.customer.minor;\nimport com.audora.lotting_be.model.customer.Customer;\nimport com.fasterxml.jackson.annotation.JsonBackReference;\nimport jakarta.persistence.*;\nimport lombok.Data;\n\n@Embeddable\n@Data\npublic class Agenda {\n\n    private String agenda1;     // 제1호\n    private String agenda2_1;   // 제2-1호\n    private String agenda2_2;   // 제2-2호\n    private String agenda2_3;   // 제2-3호\n    private String agenda2_4;   // 제2-4호\n    private String agenda3;     // 제3호\n    private String agenda4;     // 제4호\n    private String agenda5;     // 제5호\n    private String agenda6;     // 제6호\n    private String agenda7;     // 제7호\n    private String agenda8;     // 제8호\n    private String agenda9;     // 제9호\n    private String agenda10;    // 제10호\n\n    @OneToOne\n    @JoinColumn(name = \"customer_id\")\n    @JsonBackReference\n    private Customer customer;\n}\n",
                "Cancel.java": "package com.audora.lotting_be.model.customer.minor;\n\nimport jakarta.persistence.Embeddable;\nimport lombok.Data;\n\nimport java.time.LocalDate;\n\n@Embeddable\n@Data\npublic class Cancel {\n\n    private LocalDate canceldate; //해지일자\n    private LocalDate refunddate; //환급일자\n    private Integer refundamount; //환급금\n}",
                "CustomerData.java": "package com.audora.lotting_be.model.customer.minor;\n\nimport jakarta.persistence.Embeddable;\nimport lombok.Data;\n\n@Embeddable\n@Data\npublic class CustomerData {\n    private String name; //성명\n    private Integer resnumfront; //주민번호 앞자리\n    private Integer resnumback; //주민번호 뒷자리\n    private String phone; //휴대전화\n    private String email; // E-mail\n}",
                "Dahim.java": "package com.audora.lotting_be.model.customer.minor;\n\nimport jakarta.persistence.Embeddable;\nimport lombok.Data;\n\nimport java.time.LocalDate;\n\n@Embeddable\n@Data\npublic class Dahim {\n    private String dahimsisang; //시상\n    private LocalDate dahimdate; //일자\n    private String dahimprepaid; //6/30선지금\n    private String dahimfirst; //1회차청구\n    private String dahimfirstpay; //(1회차?)금액\n    private LocalDate dahimdate2; //일자2\n    private String dahimsource; //출처\n    private String dahimsecond; //2회차청구\n    private String dahimsecondpay; //(2회차?)금액\n    private LocalDate dahimdate3; //일자3\n    private String dahimsum; //합계\n}",
                "Deposit.java": "// src/main/java/com/audora/lotting_be/model/customer/Deposit.java\n\npackage com.audora.lotting_be.model.customer.minor;\n\nimport jakarta.persistence.Embeddable;\nimport lombok.Data;\nimport java.time.LocalDate;\n\n@Embeddable\n@Data\npublic class Deposit {\n    private LocalDate depositdate; //납입일자\n    private Long depositammount; //금액\n\n}\n",
                "Financial.java": "package com.audora.lotting_be.model.customer.minor;\n\nimport jakarta.persistence.Embeddable;\nimport lombok.Data;\n\nimport java.time.LocalDate;\n\n@Embeddable\n@Data\npublic class Financial {\n    private String bankname; //은행명\n    private String accountnum; //계좌번호\n    private String accountholder; //예금주\n    private String trustcompany; //신탁사\n    private LocalDate trustcompanydate; //신탁사제출일자\n}",
                "Firstemp.java": "package com.audora.lotting_be.model.customer.minor;\n\nimport jakarta.persistence.Embeddable;\nimport lombok.Data;\n\nimport java.time.LocalDate;\n\n@Embeddable\n@Data\npublic class Firstemp {\n    private String firstemptimes; //차순\n    private LocalDate firstempdate; //지급일자\n}\n",
                "LegalAddress.java": "// src/main/java/com/audora/lotting_be/model/customer/LegalAddress.java\npackage com.audora.lotting_be.model.customer.minor;\n\nimport jakarta.persistence.Embeddable;\nimport lombok.Data;\n\n@Embeddable\n@Data\npublic class LegalAddress {\n    private String postnumber; //우편번호\n    private String post; //주소\n    private String detailaddress; //상세주소\n}\n\n",
                "Loan.java": "// Loan.java\npackage com.audora.lotting_be.model.customer.minor;\n\nimport jakarta.persistence.*;\nimport lombok.Data;\nimport java.time.LocalDate;\n\n@Embeddable\n@Data\npublic class Loan {\n    private LocalDate loandate; //대출일자\n    private String loanbank; //은행\n    private Long loanammount; //대출액\n    private LocalDate selfdate; //자납일\n    private Long selfammount; //자납액\n    private Long loanselfsum; //합계\n    private Long loanselfcurrent; //잔액\n}\n",
                "Meetingattend.java": "package com.audora.lotting_be.model.customer.minor;\n\nimport jakarta.persistence.Embeddable;\nimport lombok.Data;\n\n@Embeddable\n@Data\npublic class Meetingattend {\n    private String howtoattend;    // 참석방법 (나중에 셀 합칠 때 대비)\n    private String ftofattend;     // 서면\n    private String selfattend;     // 직접\n    private String behalfattend;   // 대리\n}\n",
                "MGM.java": "package com.audora.lotting_be.model.customer.minor;\n\nimport jakarta.persistence.Embeddable;\nimport lombok.Data;\n\n@Embeddable\n@Data\npublic class MGM {\n    private Long mgmfee; //수수료\n    private String mgmcompanyname; //업체명\n    private String mgmname; //이름\n    private String mgminstitution; //기관\n    private String mgmaccount; //계좌\n}",
                "Postreceive.java": "// src/main/java/com/audora/lotting_be/model/customer/Postreceive.java\npackage com.audora.lotting_be.model.customer.minor;\n\nimport jakarta.persistence.Embeddable;\nimport lombok.Data;\n\n@Embeddable\n@Data\npublic class Postreceive {\n    private String postnumberreceive; //우편번호\n    private String postreceive; //주소\n    private String detailaddressreceive; //상세주소\n}\n",
                "Responsible.java": "package com.audora.lotting_be.model.customer.minor;\n\nimport jakarta.persistence.Embeddable;\nimport lombok.Data;\n\n@Embeddable\n@Data\npublic class Responsible {\n    private String generalmanagement; //총괄\n    private String division; //본부\n    private String team; //팀\n    private String managername; //담당자 성명\n    private String feepaid; //수수료 지급\n}",
                "Secondemp.java": "package com.audora.lotting_be.model.customer.minor;\n\nimport jakarta.persistence.Embeddable;\nimport lombok.Data;\n\nimport java.time.LocalDate;\n\n@Embeddable\n@Data\npublic class Secondemp {\n    private String secondemptimes; //차순\n    private LocalDate secondempdate; //지급일자\n}\n"
            }
        }
    },
    "Fee": {
        "__files__": {
            "Fee.java": "// Fee.java\npackage com.audora.lotting_be.model.Fee;\n\nimport com.fasterxml.jackson.annotation.JsonManagedReference;\nimport jakarta.persistence.*;\nimport lombok.Data;\nimport java.util.List;\n\n@Entity\n@Data\npublic class Fee {\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n\n    private String groupname; //군\n    private String floor; //층\n    private String batch; //가입차순 (1차, 2차 등등)\n    private String type; //타입\n    private Double supplyarea; //공급면적\n    private Double priceperp; //평당가\n    private Long price; //금액\n    private Double paymentratio; //납입비율\n    private Long paysum; //합계\n\n    @OneToMany(mappedBy = \"fee\", cascade = CascadeType.ALL)\n    @JsonManagedReference\n    private List<FeePerPhase> feePerPhases;\n}\n",
            "FeePerPhase.java": "// FeePerPhase.java\npackage com.audora.lotting_be.model.Fee;\n\nimport com.fasterxml.jackson.annotation.JsonBackReference;\nimport jakarta.persistence.*;\nimport lombok.Data;\n\n@Entity\n@Data\npublic class FeePerPhase {\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n\n    private Integer phaseNumber; //n차\n    private Long phasefee; //금액\n    private String phasedate; //제출일\n\n    @ManyToOne\n    @JsonBackReference\n    @JoinColumn(name = \"fee_id\")\n    private Fee fee;\n}\n"
        }
    },
    "manager": {
        "__files__": {
            "Manager.java": "// src/main/java/com/audora/lotting_be/model/manager/Manager.java\npackage com.audora.lotting_be.model.manager;\n\nimport jakarta.persistence.*;\nimport lombok.Data;\nimport java.util.Set;\n\n@Entity\n@Data\n@Table(name = \"managers\")\npublic class Manager {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n\n    @Column(nullable = false, unique = true)\n    private String username;\n\n    @Column(nullable = false)\n    private String password;\n\n    // 역할을 확장할 수 있도록 Set으로 정의\n    @ElementCollection(fetch = FetchType.EAGER)\n    @CollectionTable(name = \"manager_roles\", joinColumns = @JoinColumn(name = \"manager_id\"))\n    @Column(name = \"role\")\n    private Set<String> roles;\n}\n"
        }
    }
}